#!perl

# Note: This script is a CLI interface to Riap function /App/UpdateRinciMetadataDb/update_rinci_metadata_db
# and generated automatically using Dist::Zilla::Plugin::Rinci::ScriptFromFunc version 0.03

our $DATE = '2014-12-27'; # DATE
our $VERSION = '0.09'; # VERSION

use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::Any -prefer_lite=>1;

Perinci::CmdLine::Any->new(
    url => "/App/UpdateRinciMetadataDb/update_rinci_metadata_db",
)->run;

# ABSTRACT: Create/update Rinci API metadata database
# PODNAME: update-rinci-metadata-db

__END__

=pod

=encoding UTF-8

=head1 NAME

update-rinci-metadata-db - Create/update Rinci API metadata database

=head1 VERSION

This document describes version 0.09 of update-rinci-metadata-db (from Perl distribution App-UpdateRinciMetadataDb), released on 2014-12-27.

=head1 SYNOPSIS

Usage:

 % update-rinci-metadata-db [options] <dsn> <module_or_package> ...

=head1 OPTIONS

C<*> marks required options.

=over

=item B<--config-path>=I<s>

Set path to configuration file.

Can be specified multiple times.

=item B<--config-profile>=I<s>

Set configuration profile to use.

=item B<--dsn>=I<s>*

DBI connection DSN.

Note: has been tested with MySQL and SQLite only.


=item B<--exclude-json>=I<s>

Perl package names or prefixes to exclude (JSON-encoded).

See C<--exclude>.

=item B<--exclude>=I<s@>

Perl package names or prefixes to exclude.

Can be specified multiple times.

=item B<--force-update>, B<--force>

Force update database even though module hasn't changed since last update.

=item B<--format>=I<s>

Choose output format, e.g. json, text.

=item B<--help>, B<-h>, B<-?>

Display this help message.

=item B<--json>

Set output format to json.

=item B<--library-json>=I<s>, B<-I>

Include library path, like Perl's -I (JSON-encoded).

See C<--library>.

=item B<--library>=I<s>

Include library path, like Perl's -I.

Note that some modules are already loaded before this option takes effect. To
make sure you use the right library, you can use `PERL5OPT` or explicitly use
`perl` and use its `-I` option.


=item B<--module-or-package-json>=I<s>

Perl module or prefixes or package to add/update (JSON-encoded).

See C<--module-or-package>.

=item B<--module-or-package>=I<s@>*

Perl module or prefixes or package to add/update.

For each entry, you can specify:

* a Perl module name e.g. `Foo::Bar`. An attempt will be made to load that
  module.

* a module prefix ending with `::` or `::*` e.g. `Foo::Bar::*`. `Module::List`
  will be used to list all modules under `Foo::Bar::` recursively and load all
  those modules.

* a package name using `+Foo::Bar` syntax. An attempt to load module with that
  name will *not* be made. This can be used to add an already-loaded package
  e.g. by another module).

* a package prefix using `+Foo::Bar::` or `+Foo::Bar::*` syntax. Subpackages
  will be listed recursively (using `Package::MoreUtil`'s
  `list_subpackages`).


Can be specified multiple times.

=item B<--naked-res>

When outputing as JSON, strip result envelope.

By default, when outputing as JSON, the full enveloped result is returned, e.g.:

    [200,"OK",[1,2,3],{"func.extra"=>4}]

The reason is so you can get the status (1st element), status message (2nd
element) as well as result metadata/extra result (4th element) instead of just
the result (3rd element). However, sometimes you want just the result, e.g. when
you want to pipe the result for more post-processing. In this case you can use
`--naked-res` so you just get:

    [1,2,3]


=item B<--no-config>

Do not use any configuration file.

=item B<--no-delete>

=item B<--password>=I<s>

DBI connection password.

=item B<--require-json>=I<s>, B<-m>

Require a Perl module, a la Perl's -m (JSON-encoded).

See C<--require>.

=item B<--require>=I<s@>

Require a Perl module, a la Perl's -m.

Can be specified multiple times.

=item B<--use-json>=I<s>, B<-M>

Use a Perl module, a la Perl's -M (JSON-encoded).

See C<--use>.

=item B<--use>=I<s@>

Use a Perl module, a la Perl's -M.

Can be specified multiple times.

=item B<--user>=I<s>

DBI connection user.

=item B<--version>, B<-v>

=back

=head1 FILES

B</etc/update-rinci-metadata-db.conf>

B<~/update-rinci-metadata-db.conf>

=head1 COMPLETION

This script has shell tab completion capability with support for several shells.

=head2 bash

To activate bash completion for this script, put:

 complete -C update-rinci-metadata-db update-rinci-metadata-db

in your bash startup (e.g. C<~/.bashrc>). Your next shell session will then recognize tab completion for the command. Or, you can also directly execute the line above in your shell to activate immediately.

It is recommended, however, that you install L<shcompgen> which allows you to activate completion scripts for several kinds of scripts on multiple shells. Some CPAN distributions (those that are built with L<Dist::Zilla::Plugin::GenShellCompletion>) will even automatically enable shell completion for their included scripts (using C<shcompgen>) at installation time, so you can immadiately have tab completion.

=head2 tcsh

To activate tcsh completion for this script, put:

 complete update-rinci-metadata-db 'p/*/`update-rinci-metadata-db`/'

in your tcsh startup (e.g. C<~/.tcshrc>). Your next shell session will then recognize tab completion for the command. Or, you can also directly execute the line above in your shell to activate immediately.

It is also recommended to install C<shcompgen> (see above).

=head2 other shells

For fish and zsh, install C<shcompgen> as described above.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/App-UpdateRinciMetadataDb>.

=head1 SOURCE

Source repository is at L<https://github.com/sharyanto/perl-App-UpdateRinciMetadataDb>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=App-UpdateRinciMetadataDb>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2014 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
